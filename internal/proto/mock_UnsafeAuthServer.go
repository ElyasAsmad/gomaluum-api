// Code generated by mockery v2.52.1. DO NOT EDIT.

package auth_proto

import mock "github.com/stretchr/testify/mock"

// MockUnsafeAuthServer is an autogenerated mock type for the UnsafeAuthServer type
type MockUnsafeAuthServer struct {
	mock.Mock
}

type MockUnsafeAuthServer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockUnsafeAuthServer) EXPECT() *MockUnsafeAuthServer_Expecter {
	return &MockUnsafeAuthServer_Expecter{mock: &_m.Mock}
}

// mustEmbedUnimplementedAuthServer provides a mock function with no fields
func (_m *MockUnsafeAuthServer) mustEmbedUnimplementedAuthServer() {
	_m.Called()
}

// MockUnsafeAuthServer_mustEmbedUnimplementedAuthServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedAuthServer'
type MockUnsafeAuthServer_mustEmbedUnimplementedAuthServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedAuthServer is a helper method to define mock.On call
func (_e *MockUnsafeAuthServer_Expecter) mustEmbedUnimplementedAuthServer() *MockUnsafeAuthServer_mustEmbedUnimplementedAuthServer_Call {
	return &MockUnsafeAuthServer_mustEmbedUnimplementedAuthServer_Call{Call: _e.mock.On("mustEmbedUnimplementedAuthServer")}
}

func (_c *MockUnsafeAuthServer_mustEmbedUnimplementedAuthServer_Call) Run(run func()) *MockUnsafeAuthServer_mustEmbedUnimplementedAuthServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockUnsafeAuthServer_mustEmbedUnimplementedAuthServer_Call) Return() *MockUnsafeAuthServer_mustEmbedUnimplementedAuthServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockUnsafeAuthServer_mustEmbedUnimplementedAuthServer_Call) RunAndReturn(run func()) *MockUnsafeAuthServer_mustEmbedUnimplementedAuthServer_Call {
	_c.Run(run)
	return _c
}

// NewMockUnsafeAuthServer creates a new instance of MockUnsafeAuthServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockUnsafeAuthServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockUnsafeAuthServer {
	mock := &MockUnsafeAuthServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
