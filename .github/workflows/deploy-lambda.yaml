name: Deploy Images to EC2
on:
  workflow_dispatch:
jobs:
  push-store-image:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: '.'
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --config=./.golangci.yaml --timeout=30m --verbose
      # Build the Docker image first
      - name: Login to ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Create and use a new builder instance
        run: |
          docker buildx create --name gomaluumbuilder --use
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
          builder: gomaluumbuilder
          cache-from: type=registry,ref=${{ secrets.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:cache
          cache-to: type=registry,mode=max,image-manifest=true,oci-mediatypes=true,ref=${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:cache
      - uses: docker/build-push-action@v4
        with:
          push: false
          tags: gomaluum:latest
          # Slim the Image
      - uses: kitabisa/docker-slim-action@v1
        env:
          DSLIM_HTTP_PROBE: false
        with:
          target: gomaluum:latest
          tag: "slim"
          # Docker Hub Login
  # deploy:
  #   needs: push-store-image
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: 'Checkout GitHub Action'
  #       uses: actions/checkout@main
  #     - name: 'Deploy to EC2'
  #       uses: appleboy/ssh-action@v1.0.3
  #       with:
  #         host: ${{ secrets.SSH_HOST }}
  #         username: ubuntu
  #         key: ${{ secrets.SSH_KEY }}
  #         script: |
  #           docker login ghcr.io -u nrmnqdds -p ${{ secrets.GHCR_TOKEN }}
  #           docker compose pull
  #           docker compose up --force-recreate --build -d gomaluum
  #           docker system prune -a -f
